a#new-activity {
  float: right;

  @extend %icon-button-add;
}

.map {
  margin: 6em 0 0;

  h3 {
    @include custom-sans(light);

    text-align: center;

    @extend %ornamental-divider-after;
  }

  iframe {
    border: 0;
    height: 400px;
    margin: 2em 0 0;
  }

  @include grid-media($tablet-lite) {
    iframe {
      height: 600px;
    }
  }
}

#activities {
  clear: both;

  @extend %clearfix;

  @extend %unlisted;

  padding: 1em 0 0 0;

  // card variations
  $types: participant ok remove, owner edit edit;

  .activity-day {
    clear: both;

    h1 {
      margin-top: 0;
      padding-top: 0.67em;
    }
  }

  li {
    display: block;
    margin: 0 0 2px 0;
    text-align: center;

    // icon in the upper right,
    // shows up only if owner or participant
    span.icon {
      opacity: 1;
      position: absolute;
      right: 15px;
      top: 15px;
      transition: opacity 0.25s;
    }

    // select icon based on card variation
    @each $type in $types {
      &.#{nth($type, 1)} {
        span.icon {
          @extend %icon-#{nth($type, 2)};
        }
      }
    }

    // links are actually stacked in this case
    // as one card has to support many purposes
    a {
      border: 0;

      // link to show action, usually covers whole card
      // on hover appears as secondary button above title
      &.details {
        display: block;
        height: 100%;
        left: 0;
        position: absolute;
        top: 0;
        width: 100%;
        z-index: 100;

        span {
          @extend %secondary-button;

          background: $medium-gray;
          margin: 20em 0 0;
          opacity: 0;
        }
      }
    }

    // card background and wrapper
    .container {
      background: lighten($extra-light-gray, 5);
      border: 1px solid lighten($extra-light-gray, 5);
      height: 25em;
      margin: 0 1px;
      overflow: hidden;
      padding: 2.5em 1em 1em 1em;
      position: relative;
      transition: all 0.35s ease-in-out;
    }

    // all default text: title, organizer, date etc.
    .labels {
      color: $extra-dark-gray;
      margin: 1.5em 0 0 0;

      // title
      h4 {
        @include custom-serif(light);

        font-size: 1.225em;
        margin: 0;
        padding: 0 0.727272em;

        @extend %transition-all-15s-ease-out;

        @extend %ornamental-divider-before;

        @extend %ornamental-divider-after;

        &::before,
        &::after {
          margin: 0.2em auto;
          width: 20px;
        }

        &::before {
          margin: 0 auto;
          width: 0;
        }
      }

      // creator and date/time rows
      p {
        opacity: 1;
        transition: opacity 0.1s;

        &.creator {
          margin: 0.5em 0;

          @include custom-sans(medium);

          @extend %smaller-text;

          text-transform: uppercase;
        }

        &.time {
          border-top: 1px solid $light-gray;
          bottom: 0;
          left: 1em;
          padding: 0.75em 0 0;

          @include custom-serif(bold);

          position: absolute;
          right: 1em;
        }
      }
    }

    //
    .progress {
      display: inline-block;
    }

    // the big button appearing on hover
    .action {
      left: 0;
      opacity: 0;
      position: absolute;
      right: 0;
      top: 5em;
      transform: scale(0.9);
      transition: all 0.35s ease-in-out 0;
      z-index: 1001;

      a, button {
        @extend %large-icon-button-ok;
      }
    }

    // select action type based on card variation
    @each $type in $types {
      &.#{nth($type, 1)} {
        .action {
          a, button {
            @extend %large-icon-button-#{nth($type, 3)};
          }
        }
      }
    }

    // HOVER state
    &:hover {
      cursor: pointer;

      .container {
        background: $white;
        border-color: $extra-light-gray;
        box-shadow: 0 0 25px transparentize($black, 0.85);
        z-index: 9001;
      }

      span.icon {
        opacity: 0;
        transition: opacity 0.25s;
      }

      a.details {
        span {
          opacity: 1;
          transition: all 0.25s ease-in-out;
        }
      }

      .progress-wrapper,
      .container > .progress {
        @extend %transition-all-15s-ease-out;

        opacity: 0;
        transform: translate(0, -9em);
      }

      &.full.default,
      &.past {
        .progress-wrapper,
        .container > .progress {
          @extend %transition-all-15s-ease-out;

          opacity: 0.5;
          transform: translate(0, 0);
        }
      }

      .labels {
        h4 {
          @extend %transition-all-15s-ease-out;

          transform: translate(0, 2.5em);

          &::before {
            margin: 0 auto 0.5em;
            width: 50%;
          }

          &::after {
            width: 0;
          }
        }

        p {
          opacity: 0;
          transition: opacity 0.1s;
        }

        .requires_event_ticket {
          opacity: 0;
          transition: opacity 0.1s;
        }
      }

      .action {
        opacity: 1;
        transform: scale(1);
        transition: all 0.15s ease-out 0.15s;
      }
    }
  }

  @include grid-media($tablet-lite) {
    li {
      @include grid-column(2);
    }
  }


  @include grid-media($tablet-portrait-plus) {
    li {
      @include grid-column(2);
    }
  }
}
